<Window x:Class="MyWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyWpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200" Left="0" Top="0">
        <!-- FocusVisualStyle="{x:Null}" 这个属性 -->
    <Window.Resources>
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                            EndPoint="0.5,1"
                            StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                        Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                            StartPoint="0,0"
                            EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
            <GradientStop Color="#000000FF"
                            Offset="0" />
            <GradientStop Color="#600000FF"
                            Offset="0.4" />
            <GradientStop Color="#600000FF"
                            Offset="0.6" />
            <GradientStop Color="#000000FF"
                            Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>




        <Style TargetType="Button">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <!-- <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" /> -->
        <Setter Property="MinHeight"
                Value="23" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                        x:Name="Border"
                        CornerRadius="2"
                        BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                        Offset="0.0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                        Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1"
                                        StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                    Offset="0" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                    Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.5" />
                        <VisualTransition GeneratedDuration="0"
                                        To="Pressed" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                            (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource ControlMouseOverColor}" />
                        </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                            (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource ControlPressedColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                            (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource PressedBorderDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                            (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource PressedBorderLightColor}" />
                        </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                            (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource DisabledControlDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource DisabledForegroundColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                            (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0"
                                                Value="{StaticResource DisabledBorderDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter Margin="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                </Border>
                <ControlTemplate.Triggers>
                <Trigger Property="IsDefault"
                        Value="true">

                    <Setter TargetName="Border"
                            Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                                            EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                            <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                            Offset="0.0" />
                            <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                            Offset="1.0" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Setter.Value>
                    </Setter>
                </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            </Setter.Value>
        </Setter>
        </Style>
        
    </Window.Resources>
        <!-- TextInput="txt_input_TextInput"  -->
        <!-- TextChanged="txt_input_TextChanged" -->
        <!-- 只有一张图就不用定义grid了 -->
    <!-- <Image Grid.Row='1' x:Name="img" Source="watermark.jpg" />没卵用 -->
    <Grid>
        <Grid.RowDefinitions>
        <!-- 超出定义范围的控件不显示 -->
            <RowDefinition Height="Auto" MaxHeight='250' />
            <RowDefinition Height='*'/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <!-- 这个canvas加ellipse默认大小为0 -->
        <!-- <Canvas Grid.Row='0' ClipToBounds = "true">
            <Ellipse
                Canvas.Left="100.0" Canvas.Top="100.0"
                Width="200.0" Height="200.0"
                Fill="lightgray"/>
        </Canvas> -->
        <StackPanel Grid.Row='0'>
            <Button Click="click1">转移下方文件夹里的文件</Button> 
            <TextBox Name="resourcePathTextBox" Text="D:\game"/>
            <TextBox Name="storePathTextBox" Text="D:\store"/>
        </StackPanel>
        <StackPanel Grid.Row = '1' >
        <!-- grid添加两个元素则重叠显示 -->
        <!-- 当两个scroll一起时,外面的那个起作用 -->
        <!-- popup默认在母元素的左上角外侧... -->
            <TextBox Name="textBox1"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                VerticalScrollBarVisibility="Visible" 
                MaxHeight="200"
                Text="{Binding ElementName=my, Path=SelectedItem.Info.FullName ,Mode=OneWay}" />
                <!--这里只能用oneway以下,default似乎是双向的 -->
            <TextBlock Name="messageTextBlock" Text="showsomething"/>
            <Button Click="click3">刷新资源文件夹</Button> 
            <!-- 自定义控件要用x:访问 -->
            <local:MyTreeView x:Name='my'/>
            <Button Click="click2">转移所选文件</Button> 
        </StackPanel>
    </Grid>
</Window>
